services:
  postgres:
    image: postgres:latest
    command: ['postgres', '-c', 'log_statement=all']
    restart: always
    ports:
      - 5432:5432/tcp
    environment:
      POSTGRES_DB: stellar
      POSTGRES_USER: stellar
      POSTGRES_PASSWORD: secretdevpassword
    volumes:
      - ../data/postgresql/:/var/lib/postgresql/data
      - postgres_socket:/var/run/postgresql:rw
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U stellar']
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    command:
      [
        sh,
        -c,
        'rm -f /data/dump.rdb && redis-server --save "" --appendonly no --requirepass secretredispassword --tcp-keepalive 60 --timeout 300',
      ]
    volumes:
      - cache:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', 'secretredispassword', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3

  stellar-server:
    image: kasuaberra/stellar-sync-server:latest
    restart: on-failure
    ports:
      - 6000:6000/tcp
      - 6050:6050/tcp
    environment:
      StellarSync__CdnFullUrl: '${DEV_STELLAR_CDNURL}'
      StellarSync__XIVAPIKey: '${DEV_STELLAR_XIVAPIKEY}'
      DOTNET_USE_POLLING_FILE_WATCHER: 1
    volumes:
      - ../config/standalone/server-standalone.json:/opt/StellarSyncServer/appsettings.json
      - ../log/server-standalone/:/opt/StellarSyncServer/logs/:rw
      - postgres_socket:/var/run/postgresql/:rw
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'curl --fail http://localhost:6000/health || exit 1']
      retries: 60
      start_period: 10s
      timeout: 1s

  stellar-auth:
    image: kasuaberra/stellar-sync-authservice:latest
    restart: on-failure
    ports:
      - 8080:8080/tcp
    environment:
      DOTNET_USE_POLLING_FILE_WATCHER: 1
      StellarSync__DiscordOAuthClientId: '${DEV_STELLAR_DISCORD_OAUTH_CLIENT_ID}'
      StellarSync__DiscordOAuthClientSecret: '${DEV_STELLAR_DISCORD_OAUTH_CLIENT_SECRET}'
    volumes:
      - ../config/standalone/authservice-standalone.json:/opt/StellarSyncAuthService/appsettings.json
      - ../log/authservice-standalone/:/opt/StellarSyncAuthService/logs/:rw
      - postgres_socket:/var/run/postgresql/:rw
    depends_on:
      stellar-server:
        condition: service_healthy
      postgres:
        condition: service_healthy

  stellar-services:
    image: kasuaberra/stellar-sync-services:latest
    restart: on-failure
    environment:
      StellarSync__DiscordBotToken: '${DEV_STELLAR_DISCORDTOKEN}'
      StellarSync__DiscordChannelForMessages: '${DEV_STELLAR_DISCORDCHANNEL}'
      StellarSync__DiscordChannelForReports: '${DEV_STELLAR_DISCORDCHANNEL}'
      StellarSync__DiscordChannelForCommands: '${DEV_STELLAR_DISCORDCHANNEL}'
      DOTNET_USE_POLLING_FILE_WATCHER: 1
    volumes:
      - ../config/standalone/services-standalone.json:/opt/StellarSyncServices/appsettings.json
      - ../log/services-standalone/:/opt/StellarSyncServices/logs/:rw
      - postgres_socket:/var/run/postgresql/:rw
    depends_on:
      stellar-server:
        condition: service_healthy
      postgres:
        condition: service_healthy

  stellar-files:
    image: kasuaberra/stellar-sync-staticfilesserver:latest
    ports:
      - 6200:6200/tcp
    restart: on-failure
    environment:
      StellarSync__CdnFullUrl: '${DEV_STELLAR_CDNURL}'
      DOTNET_USE_POLLING_FILE_WATCHER: 1
    volumes:
      - ../config/standalone/files-standalone.json:/opt/StellarSyncStaticFilesServer/appsettings.json
      - ../log/files-standalone/:/opt/StellarSyncStaticFilesServer/logs/:rw
      - postgres_socket:/var/run/postgresql/:rw
      - ../data/files-standalone/:/stellarcache/:rw
    depends_on:
      postgres:
        condition: service_healthy
      stellar-server:
        condition: service_healthy

volumes:
  postgres_socket:
  cache:
    driver: local
